name: Build Obfuscate BPB Panel

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 1 * * *"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Install dependencies
        run: |
          npm install -g javascript-obfuscator
          javascript-obfuscator --version
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Fetch latest release info
        id: fetch_release
        run: |
          # Fetch both latest release and pre-release
          RELEASE_INFO=$(curl -s https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases)
          LATEST_RELEASE=$(echo "$RELEASE_INFO" | jq -r '.[0]')
          LATEST_PRERELEASE=$(echo "$RELEASE_INFO" | jq -r 'map(select(.prerelease == true)) | .[0]')

          # Compare versions and select the latest one
          LATEST_VERSION=$(echo "$LATEST_RELEASE" | jq -r '.tag_name')
          PRERELEASE_VERSION=$(echo "$LATEST_PRERELEASE" | jq -r '.tag_name')

          if [ "$(echo -e "$LATEST_VERSION\n$PRERELEASE_VERSION" | sort -V | tail -n1)" == "$PRERELEASE_VERSION" ]; then
            SELECTED_RELEASE=$LATEST_PRERELEASE
            RELEASE_TYPE="测试版"
          else
            SELECTED_RELEASE=$LATEST_RELEASE
            RELEASE_TYPE="正式版"
          fi

          # Extract download URL and version
          DOWNLOAD_URL=$(echo "$SELECTED_RELEASE" | jq -r '.assets[] | select(.name == "worker.js") | .browser_download_url')
          VERSION=$(echo "$SELECTED_RELEASE" | jq -r '.tag_name')

          if [ -z "$DOWNLOAD_URL" ]; then
            echo "Error: Could not find worker.js in latest release"
            exit 1
          fi

          # Output variables for later steps
          echo "DOWNLOAD_URL=$DOWNLOAD_URL" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "RELEASE_TYPE=$RELEASE_TYPE" >> $GITHUB_ENV

      - name: Check if worker.js is already latest
        id: check_file
        run: |
          if [ -f "worker.js" ]; then
            CURRENT_VERSION=$(grep -oP 'version:\s*\K[\d.]+(-beta\d+)?' worker.js || echo "")
            if [ "$CURRENT_VERSION" == "$VERSION" ]; then
              echo "::notice::worker.js is already the latest version ($VERSION), skipping download."
              echo "SKIP_DOWNLOAD=true" >> $GITHUB_ENV
            else
              echo "::notice::Current worker.js version ($CURRENT_VERSION) is outdated. Updating to $VERSION."
              echo "SKIP_DOWNLOAD=false" >> $GITHUB_ENV
            fi
          else
            echo "::notice::worker.js does not exist. Downloading latest version ($VERSION)."
            echo "SKIP_DOWNLOAD=false" >> $GITHUB_ENV
          fi

      - name: Download latest worker.js
        if: env.SKIP_DOWNLOAD == 'false'
        run: |
          wget -O origin.js "$DOWNLOAD_URL"
          ls -l origin.js
          head -n 10 origin.js

      - name: Obfuscate BPB worker js
        if: env.SKIP_DOWNLOAD == 'false'
        run: |
          javascript-obfuscator origin.js --output _worker.js \
            --compact true \
            --identifier-names-generator hexadecimal \
            --rename-globals true \
            --string-array true \
            --string-array-encoding 'base64' \
            --string-array-threshold 0.75 \
            --transform-object-keys true \
            --self-defending false \
            --simplify true
          ls -l _worker.js
          head -n 10 _worker.js

      - name: Commit changes
        if: env.SKIP_DOWNLOAD == 'false'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: ":arrow_up: 更新到${{ env.RELEASE_TYPE }} bpb 面板 ${{ env.VERSION }}"
          commit_author: 'github-actions[bot] <github-actions[bot]@users.noreply.github.com>'
          push_options: '--set-upstream'
